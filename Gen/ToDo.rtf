{\rtf1\ansi\ansicpg1251\cocoartf1138\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red28\green0\blue207;\red0\green116\blue0;
\red63\green110\blue116;\red38\green71\blue75;\red100\green56\blue32;\red92\green38\blue153;\red46\green13\blue110;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\pardirnatural
\ls1\ilvl0
\f0\fs24 \cf0 \
{\listtext	2.	}\uc0\u1044 \u1086 \u1076 \u1077 \u1083 \u1072 \u1090 \u1100  \u1085 \u1086 \u1088 \u1084 \u1072 \u1083 \u1100 \u1085 \u1091 \u1102  \u1087 \u1088 \u1086 \u1079 \u1088 \u1072 \u1095 \u1085 \u1086 \u1089 \u1090 \u1100  \u1083 \u1080 \u1085 \u1080 \u1081  \u1074  \u1079 \u1072 \u1074 \u1080 \u1089 \u1080 \u1084 \u1086 \u1089 \u1090 \u1080  \u1086 \u1090  \u1076 \u1083 \u1080 \u1085 \u1099  \u1089 \u1074 \u1103 \u1079 \u1080  \u1076 \u1083 \u1103  ParentCell\
{\listtext	3.	}\uc0\u1042 \u1086 \u1079 \u1084 \u1086 \u1078 \u1085 \u1086  \u1075 \u1083 \u1072 \u1074 \u1085 \u1099 \u1081  \u1075 \u1077 \u1088 \u1086 \u1081  \u1073 \u1091 \u1076 \u1077 \u1084  \u1086 \u1089 \u1084 \u1080 \u1085 \u1086 \u1075 \u1086 \u1084 , \u1082 \u1086 \u1090 \u1086 \u1088 \u1099 \u1081  \u1086 \u1093 \u1086 \u1090 \u1080 \u1090 \u1089 \u1103  \u1080 \u1083 \u1080  \u1089 \u1086 \u1073 \u1080 \u1088 \u1072 \u1077 \u1090  \u1089 \u1074 \u1086 \u1080 \u1093  \u1076 \u1077 \u1090 \u1077 \u1081 !\
{\listtext	4.	}\uc0\u1042 \u1082 \u1083 \u1102 \u1095 \u1080 \u1090 \u1100  AntiAliansing \u1076 \u1083 \u1103  \u1083 \u1080 \u1085 \u1080 \u1081  \u1076 \u1078 \u1086 \u1081 \u1085 \u1090 \u1086 \u1074 \
{\listtext	5.	}\uc0\u1044 \u1086 \u1073 \u1072 \u1074 \u1080 \u1090 \u1100  \u1080 \u1083 \u1080  \u1079 \u1072 \u1084 \u1077 \u1085 \u1080 \u1090 \u1100  \u1089 \u1090 \u1072 \u1088 \u1099 \u1081  \u1089 \u1087 \u1088 \u1072 \u1081 \u1090  \u1087 \u1086 \u1076  \u1087 \u1072 \u1083 \u1100 \u1094 \u1077 \u1084  \u1080 \u1075 \u1088 \u1086 \u1082 \u1072 . \u1052 \u1086 \u1078 \u1077 \u1090  \u1073 \u1091 \u1076 \u1077 \u1090  \u1083 \u1091 \u1095 \u1096 \u1077  \u1089 \u1076 \u1077 \u1083 \u1072 \u1090 \u1100  \u1082 \u1072 \u1082  \u1074  world of Goo - \u1074 \u1088 \u1072 \u1097 \u1072 \u1102 \u1097 \u1080 \u1081 \u1089 \u1103  \u1087 \u1088 \u1086 \u1087 \u1077 \u1083 \u1083 \u1077 \u1088 .\
{\listtext	6.	}\uc0\u1048 \u1089 \u1087 \u1086 \u1083 \u1100 \u1079 \u1086 \u1074 \u1072 \u1090 \u1100  GridEffect \u1085 \u1072  \u1089 \u1094 \u1077 \u1085 \u1077  Shaky3D (\u1101 \u1092 \u1092 \u1077 \u1082 \u1090  \u1074 \u1086 \u1083 \u1085  \u1085 \u1072  \u1074 \u1086 \u1076 \u1077 ) \u1080  Waves3D, Liquid\
{\listtext	7.	}\uc0\u1054 \u1073 \u1098 \u1077 \u1076 \u1080 \u1085 \u1080 \u1090 \u1100  \u1086 \u1090 \u1088 \u1080 \u1089 \u1086 \u1074 \u1082 \u1091  \u1074 \u1089 \u1077 \u1093  \u1076 \u1078 \u1086 \u1080 \u1085 \u1090 \u1086 \u1074  \u1080  \u1089 \u1080 \u1083  \u1086 \u1090  \u1084 \u1072 \u1075 \u1085 \u1080 \u1090 \u1086 \u1074  \u1074  \u1086 \u1076 \u1080 \u1085  Draw \u1074 \u1099 \u1079 \u1086 \u1074 \
\pard\tx220\tx720\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\fi-720\pardirnatural
\ls1\ilvl0
\f1\fs22 \cf0 {\listtext	8.	}\uc0\u1057 \u1086 \u1082 \u1088 \u1072 \u1090 \u1080 \u1090 \u1100  \u1082 \u1086 \u1083 -\u1074 \u1086  \u1080 \u1089 \u1087 \u1086 \u1083 \u1100 \u1079 \u1091 \u1077 \u1084 \u1099 \u1093  SpriteSheet \u1076 \u1086  3\u1093  \u1080 \u1079  4\u1093 . \u1059 \u1076 \u1072 \u1083 \u1080 \u1090 \u1100  Iphone-hd \u1080 \u1083 \u1080  Ipad \u1074 \u1077 \u1088 \u1089 \u1080 \u1102 \
{\listtext	9.	}\uc0\u1044 \u1086 \u1073 \u1072 \u1074 \u1080 \u1090 \u1100  \u1074  \u1075 \u1083 \u1072 \u1074 \u1085 \u1086 \u1077  \u1084 \u1077 \u1085 \u1102  \u1089 \u1080 \u1089 \u1090 \u1077 \u1084 \u1091  \u1095 \u1072 \u1089 \u1090 \u1080 \u1094  \u1074  \u1074 \u1080 \u1076 \u1077  \u1087 \u1091 \u1079 \u1099 \u1088 \u1100 \u1082 \u1086 \u1074  \u1080  \u1095 \u1072 \u1089 \u1090 \u1080 \u1094  \u1087 \u1083 \u1072 \u1085 \u1082 \u1090 \u1086 \u1085 \u1072 \
{\listtext	10.	}\uc0\u1044 \u1086 \u1073 \u1072 \u1074 \u1080 \u1090 \u1100  \u1074  \u1085 \u1072 \u1095 \u1072 \u1083 \u1077  \u1091 \u1088 \u1086 \u1074 \u1085 \u1103  \u1085 \u1072 \u1079 \u1074 \u1072 \u1085 \u1080 \u1077  \u1082 \u1072 \u1082  \u1074  \u1075 \u1080 \u1083 \u1100 \u1076  \u1074 \u1072 \u1088 \u1089  2\CocoaLigature0 \
\pard\tx560\pardeftab560\pardirnatural
\cf0 \
\cf2 void\cf0  b2World::DrawJoint(b2Joint* joint)\
\{\
	b2Body* bodyA = joint->GetBodyA();\
	b2Body* bodyB = joint->GetBodyB();\
	\cf2 const\cf0  b2Transform& xf1 = bodyA->GetTransform();\
	\cf2 const\cf0  b2Transform& xf2 = bodyB->GetTransform();\
	b2Vec2 x1 = xf1.p;\
	b2Vec2 x2 = xf2.p;\
	b2Vec2 p1 = joint->GetAnchorA();\
	b2Vec2 p2 = joint->GetAnchorB();\
\
	b2Color color(\cf3 0.5f\cf0 , \cf3 0.8f\cf0 , \cf3 0.8f\cf0 );\
\
	\cf2 switch\cf0  (joint->GetType())\
	\{\
	\cf2 case\cf0  e_distanceJoint:\
		m_debugDraw->DrawSegment(p1, p2, color);\
		\cf2 break\cf0 ;\
\
	\cf2 case\cf0  e_pulleyJoint:\
		\{\
			b2PulleyJoint* pulley = (b2PulleyJoint*)joint;\
			b2Vec2 s1 = pulley->GetGroundAnchorA();\
			b2Vec2 s2 = pulley->GetGroundAnchorB();\
			m_debugDraw->DrawSegment(s1, p1, color);\
			m_debugDraw->DrawSegment(s2, p2, color);\
			m_debugDraw->DrawSegment(s1, s2, color);\
		\}\
		\cf2 break\cf0 ;\
\
	\cf2 case\cf0  e_mouseJoint:\
		\cf4 // don't draw this\cf0 \
		\cf2 break\cf0 ;\
\
	\cf2 default\cf0 :\
		m_debugDraw->DrawSegment(x1, p1, color);\
		m_debugDraw->DrawSegment(p1, p2, color);\
		m_debugDraw->DrawSegment(x2, p2, color);\
	\}\
\}\
\
\cf2 void\cf0  b2World::DrawDebugData()\
\{\
	\cf2 if\cf0  (m_debugDraw == \cf2 NULL\cf0 )\
	\{\
		\cf2 return\cf0 ;\
	\}\
\
	uint32 flags = m_debugDraw->GetFlags();\
\
	\cf2 if\cf0  (flags & b2Draw::e_shapeBit)\
	\{\
		\cf2 for\cf0  (b2Body* b = m_bodyList; b; b = b->GetNext())\
		\{\
			\cf2 const\cf0  b2Transform& xf = b->GetTransform();\
			\cf2 for\cf0  (b2Fixture* f = b->GetFixtureList(); f; f = f->GetNext())\
			\{\
				\cf2 if\cf0  (b->IsActive() == \cf2 false\cf0 )\
				\{\
					DrawShape(f, xf, b2Color(\cf3 0.5f\cf0 , \cf3 0.5f\cf0 , \cf3 0.3f\cf0 ));\
				\}\
				\cf2 else\cf0  \cf2 if\cf0  (b->GetType() == b2_staticBody)\
				\{\
					DrawShape(f, xf, b2Color(\cf3 0.5f\cf0 , \cf3 0.9f\cf0 , \cf3 0.5f\cf0 ));\
				\}\
				\cf2 else\cf0  \cf2 if\cf0  (b->GetType() == b2_kinematicBody)\
				\{\
					DrawShape(f, xf, b2Color(\cf3 0.5f\cf0 , \cf3 0.5f\cf0 , \cf3 0.9f\cf0 ));\
				\}\
				\cf2 else\cf0  \cf2 if\cf0  (b->IsAwake() == \cf2 false\cf0 )\
				\{\
					DrawShape(f, xf, b2Color(\cf3 0.6f\cf0 , \cf3 0.6f\cf0 , \cf3 0.6f\cf0 ));\
				\}\
				\cf2 else\cf0 \
				\{\
					DrawShape(f, xf, b2Color(\cf3 0.9f\cf0 , \cf3 0.7f\cf0 , \cf3 0.7f\cf0 ));\
				\}\
			\}\
		\}\
	\}\
\
	\cf2 if\cf0  (flags & b2Draw::e_jointBit)\
	\{\
		\cf2 for\cf0  (b2Joint* j = m_jointList; j; j = j->GetNext())\
		\{\
			DrawJoint(j);\
		\}\
	\}\
\
-----\
\
	\cf4 //\cf0 \
	\cf4 // sprite 2 (To)\cf0 \
	\cf4 //\cf0 \
	\cf4 // The startPosition is not important here, because it uses a "To" action.\cf0 \
	\cf4 // The initial position will be the 1st point of the Catmull Rom path\cf0 \
	\cf4 //\cf0 \
\
	\cf5 CCPointArray\cf0  *array2 = [\cf5 CCPointArray\cf0  \cf6 arrayWithCapacity\cf0 :\cf3 20\cf0 ];\
	\
	[array2 \cf6 addControlPoint\cf0 :\cf7 ccp\cf0 (s.\cf8 width\cf0 /\cf3 2\cf0 , \cf3 30\cf0 )];\
	[array2 \cf6 addControlPoint\cf0 :\cf7 ccp\cf0 (s.\cf8 width\cf0 -\cf3 80\cf0 ,\cf3 30\cf0 )];\
	[array2 \cf6 addControlPoint\cf0 :\cf7 ccp\cf0 (s.\cf8 width\cf0 -\cf3 80\cf0 ,s.\cf8 height\cf0 -\cf3 80\cf0 )];\
	[array2 \cf6 addControlPoint\cf0 :\cf7 ccp\cf0 (s.\cf8 width\cf0 /\cf3 2\cf0 ,s.\cf8 height\cf0 -\cf3 80\cf0 )];\
	[array2 \cf6 addControlPoint\cf0 :\cf7 ccp\cf0 (s.\cf8 width\cf0 /\cf3 2\cf0 , \cf3 30\cf0 )];\
	\
	\
	\cf5 CCCatmullRomTo\cf0  *action2 = [\cf5 CCCatmullRomTo\cf0  \cf6 actionWithDuration\cf0 :\cf3 3\cf0  \cf6 points\cf0 :array2];\
	\cf2 id\cf0  reverse2 = [action2 \cf6 reverse\cf0 ];\
	\
	\cf5 CCSequence\cf0  *seq2 = [\cf5 CCSequence\cf0  \cf6 actions\cf0 :action2, reverse2, \cf2 nil\cf0 ];\
	\
	[\cf5 kathia\cf0  \cf6 runAction\cf0 : seq2];\
	\
	\cf5 array1_\cf0  = [array \cf9 retain\cf0 ];\
	\cf5 array2_\cf0  = [array2 \cf9 retain\cf0 ];\
\}\
\
-(\cf2 void\cf0 ) dealloc\
\{\
	[\cf5 array1_\cf0  \cf9 release\cf0 ];\
	[\cf5 array2_\cf0  \cf9 release\cf0 ];\
	\
	[\cf2 super\cf0  \cf9 dealloc\cf0 ];\
\}\
\
-(\cf2 void\cf0 ) draw\
\{\
	[\cf2 super\cf0  \cf6 draw\cf0 ];\
\
	\cf4 // move to 50,50 since the "by" path will start at 50,50\cf0 \
	\cf6 kmGLPushMatrix\cf0 ();\
	\cf6 kmGLTranslatef\cf0 (\cf3 50\cf0 , \cf3 50\cf0 , \cf3 0\cf0 );\
	\cf6 ccDrawCatmullRom\cf0 (\cf5 array1_\cf0 ,\cf3 50\cf0 );\
	\cf6 kmGLPopMatrix\cf0 ();\
\
	\cf6 ccDrawCatmullRom\cf0 (\cf5 array2_\cf0 ,\cf3 50\cf0 );\
\}\
\
	\cf5 CCPointArray\cf0  *array = [\cf5 CCPointArray\cf0  \cf6 arrayWithCapacity\cf0 :\cf3 20\cf0 ];\
	\
	[array \cf6 addControlPoint\cf0 :\cf7 ccp\cf0 (\cf3 0\cf0 , \cf3 0\cf0 )];\
	[array \cf6 addControlPoint\cf0 :\cf7 ccp\cf0 (s.\cf8 width\cf0 /\cf3 2\cf0 -\cf3 30\cf0 ,\cf3 0\cf0 )];\
	[array \cf6 addControlPoint\cf0 :\cf7 ccp\cf0 (s.\cf8 width\cf0 /\cf3 2\cf0 -\cf3 30\cf0 ,s.\cf8 height\cf0 -\cf3 80\cf0 )];\
	[array \cf6 addControlPoint\cf0 :\cf7 ccp\cf0 (\cf3 0\cf0 , s.\cf8 height\cf0 -\cf3 80\cf0 )];\
	[array \cf6 addControlPoint\cf0 :\cf7 ccp\cf0 (\cf3 0\cf0 , \cf3 0\cf0 )];\
	\
\
	\cf4 //\cf0 \
	\cf4 // sprite 1 (By)\cf0 \
	\cf4 //\cf0 \
	\cf4 // Spline with no tension (tension==0)\cf0 \
	\cf4 //\cf0 \
	\
	\
	\cf5 CCCatmullRomBy\cf0  *action = [\cf5 CCCardinalSplineBy\cf0  \cf6 actionWithDuration\cf0 :\cf3 3\cf0  \cf6 points\cf0 :array \cf6 tension\cf0 :\cf3 0\cf0 ];\
	\cf2 id\cf0  reverse = [action \cf6 reverse\cf0 ];\
	\
	\cf5 CCSequence\cf0  *seq = [\cf5 CCSequence\cf0  \cf6 actions\cf0 :action, reverse, \cf2 nil\cf0 ];\
	\
	\cf5 tamara\cf0 .\cf5 position\cf0  = \cf7 ccp\cf0 (\cf3 50\cf0 ,\cf3 50\cf0 );\
	[\cf5 tamara\cf0  \cf6 runAction\cf0 : seq];\
	\
	\
	\cf4 //\cf0 \
	\cf4 // sprite 2 (By)\cf0 \
	\cf4 //\cf0 \
	\cf4 // Spline with high tension (tension==1)\cf0 \
	\cf4 //\cf0 \
		\
	\cf5 CCCatmullRomBy\cf0  *action2 = [\cf5 CCCardinalSplineBy\cf0  \cf6 actionWithDuration\cf0 :\cf3 3\cf0  \cf6 points\cf0 :array \cf6 tension\cf0 :\cf3 1\cf0 ];\
	\cf2 id\cf0  reverse2 = [action2 \cf6 reverse\cf0 ];\
	\
	\cf5 CCSequence\cf0  *seq2 = [\cf5 CCSequence\cf0  \cf6 actions\cf0 :action2, reverse2, \cf2 nil\cf0 ];\
	\
	\cf5 kathia\cf0 .\cf5 position\cf0  = \cf7 ccp\cf0 (s.\cf8 width\cf0 /\cf3 2\cf0 ,\cf3 50\cf0 );\
\
	[\cf5 kathia\cf0  \cf6 runAction\cf0 : seq2];\
	\
	\cf5 array_\cf0  = [array \cf9 retain\cf0 ];\
\}\
\
-(\cf2 void\cf0 ) dealloc\
\{\
	[\cf5 array_\cf0  \cf9 release\cf0 ];\
	\
	[\cf2 super\cf0  \cf9 dealloc\cf0 ];\
\}\
\
-(\cf2 void\cf0 ) draw\
\{\
	[\cf2 super\cf0  \cf6 draw\cf0 ];\
	\
	\cf4 // move to 50,50 since the "by" path will start at 50,50\cf0 \
	\cf6 kmGLPushMatrix\cf0 ();\
	\cf6 kmGLTranslatef\cf0 (\cf3 50\cf0 , \cf3 50\cf0 , \cf3 0\cf0 );\
	\cf6 ccDrawCardinalSpline\cf0 (\cf5 array_\cf0 , \cf3 0\cf0 , \cf3 100\cf0 );\
	\cf6 kmGLPopMatrix\cf0 ();\
\
	\cf8 CGSize\cf0  s = [[\cf5 CCDirector\cf0  \cf6 sharedDirector\cf0 ] \cf6 winSize\cf0 ];\
\
	\cf6 kmGLPushMatrix\cf0 ();\
	\cf6 kmGLTranslatef\cf0 (s.\cf8 width\cf0 /\cf3 2\cf0 , \cf3 50\cf0 , \cf3 0\cf0 );\
	\cf6 ccDrawCardinalSpline\cf0 (\cf5 array_\cf0 , \cf3 1\cf0 , \cf3 100\cf0 );\
	\cf6 kmGLPopMatrix\cf0 ();\
\}\
\

\f0\fs24 \CocoaLigature1 \
}